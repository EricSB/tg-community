This is a C library for a string implementation that has a header
tag that contains the length.

The TaggedString is an implementation of a C string that will have:
0. 100% compatibility with normal C compilers.
1. memory management built in via NewTagStr and DelTagStr
2. the ability to pass a char * directly to other functions (i.e. printf)
3. the ability to concat 2 TaggedStrings together, non destructively
   with the new TaggedString being returned to the user.  ConCatTagStr().

TODO:

Algorithms/Refactoring:
  - It seems to me that *Ins, *Get, *Rm are all refactorable into one 
    function that takes in a function and data pair, finds a place and 
    then runs that function on the data and assigns it to that place.
    - Maybe not Ins but certainly get/rm.

Datastructures
- Hashtable 
  - make it resize if max list depth is too long
  - refactor HashRm, HashIns, HashGet,

- Tree
  - scapegoat tree

- Graph implementation 
  - box and pointer
  - adjacency list
  - adjacency matrix
  - conversions between the types

- List
  - Change the list so that we always insert at the top.
  - Keep the dummy node and make the list a circular list.  This way
    GetListTop is always GetNextListNode(GetListDummy(L)) and 
    GetListEnd is always GetPrevListNode(GetListDummy(L))
    we can also support negative indexing.  
    - we're currently doing alot of seperate extra logics for list size
      of 0 or 1, we should change that.

  - change the code to make use of the listnode pointing to the list
    - no need to pass the L around, the listnode will have it.

  - add features:
    - map
    - filter
    - accumulate

  - Nth element access
    - support negative indexing!! 
    - GetElement(L, n) -gets the nth element
    - RemoveElementL, (n) -removes and returns the nth element

  - pop()
    ListRm(GetListTop())
  - deque
    ListRm(GetListEnd())

- SkipList
  - implementation

stuff to do:
construct/traverse data structures
do system routines
distill large data sets to single values
transform one data set to another

notes:
http://stackoverflow.com/questions/199418/using-c-library-in-c-code
